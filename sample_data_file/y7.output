Terminals unused in grammar

    VAR
    FUN
    LEFT_SQR_BRAC
    RIGHT_SQR_BRAC


Grammar

    0 $accept: program $end

    1 program: stmts

    2 stmts: stmts stmt
    3      | stmt

    4 stmt: RETURN exp SEMICOLON
    5     | IF LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC
    6     | WHILE LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC
    7     | REPEAT LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC

    8 exp: INT_CONSTANT
    9    | NOT exp
   10    | exp MUL exp
   11    | exp DIV exp
   12    | exp REM exp
   13    | exp PLUS exp
   14    | exp MINUS exp
   15    | exp LT exp
   16    | exp LE exp
   17    | exp GT exp
   18    | exp GE exp
   19    | exp EQ exp
   20    | exp NE exp
   21    | exp BAND exp
   22    | exp XOR exp
   23    | exp BOR exp
   24    | exp AND exp
   25    | exp OR exp
   26    | LEFT_PAR exp RIGHT_PAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT_CONSTANT <ival> (258) 8
    RETURN (259) 4
    SEMICOLON (260) 4
    VAR (261)
    FUN (262)
    WHILE (263) 6
    REPEAT (264) 7
    IF (265) 5
    LEFT_PAR (266) 5 6 7 26
    RIGHT_PAR (267) 5 6 7 26
    LEFT_BRAC (268) 5 6 7
    RIGHT_BRAC (269) 5 6 7
    LEFT_SQR_BRAC (270)
    RIGHT_SQR_BRAC (271)
    PLUS (272) 13
    MINUS (273) 14
    MUL (274) 10
    DIV (275) 11
    REM (276) 12
    BOR (277) 23
    BAND (278) 21
    AND (279) 24
    OR (280) 25
    XOR (281) 22
    LT (282) 15
    LE (283) 16
    GT (284) 17
    GE (285) 18
    NE (286) 20
    EQ (287) 19
    NOT (288) 9


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    program (35)
        on left: 1
        on right: 0
    stmts <stmts> (36)
        on left: 2 3
        on right: 1 2 5 6 7
    stmt <stmt> (37)
        on left: 4 5 6 7
        on right: 2 3
    exp <exp> (38)
        on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
        on right: 4 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26


State 0

    0 $accept: • program $end

    RETURN  shift, and go to state 1
    WHILE   shift, and go to state 2
    REPEAT  shift, and go to state 3
    IF      shift, and go to state 4

    program  go to state 5
    stmts    go to state 6
    stmt     go to state 7


State 1

    4 stmt: RETURN • exp SEMICOLON

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 11


State 2

    6 stmt: WHILE • LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC

    LEFT_PAR  shift, and go to state 12


State 3

    7 stmt: REPEAT • LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC

    LEFT_PAR  shift, and go to state 13


State 4

    5 stmt: IF • LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC

    LEFT_PAR  shift, and go to state 14


State 5

    0 $accept: program • $end

    $end  shift, and go to state 15


State 6

    1 program: stmts •
    2 stmts: stmts • stmt

    RETURN  shift, and go to state 1
    WHILE   shift, and go to state 2
    REPEAT  shift, and go to state 3
    IF      shift, and go to state 4

    $default  reduce using rule 1 (program)

    stmt  go to state 16


State 7

    3 stmts: stmt •

    $default  reduce using rule 3 (stmts)


State 8

    8 exp: INT_CONSTANT •

    $default  reduce using rule 8 (exp)


State 9

   26 exp: LEFT_PAR • exp RIGHT_PAR

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 17


State 10

    9 exp: NOT • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 18


State 11

    4 stmt: RETURN exp • SEMICOLON
   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    SEMICOLON  shift, and go to state 19
    PLUS       shift, and go to state 20
    MINUS      shift, and go to state 21
    MUL        shift, and go to state 22
    DIV        shift, and go to state 23
    REM        shift, and go to state 24
    BOR        shift, and go to state 25
    BAND       shift, and go to state 26
    AND        shift, and go to state 27
    OR         shift, and go to state 28
    XOR        shift, and go to state 29
    LT         shift, and go to state 30
    LE         shift, and go to state 31
    GT         shift, and go to state 32
    GE         shift, and go to state 33
    NE         shift, and go to state 34
    EQ         shift, and go to state 35


State 12

    6 stmt: WHILE LEFT_PAR • exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 36


State 13

    7 stmt: REPEAT LEFT_PAR • exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 37


State 14

    5 stmt: IF LEFT_PAR • exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 38


State 15

    0 $accept: program $end •

    $default  accept


State 16

    2 stmts: stmts stmt •

    $default  reduce using rule 2 (stmts)


State 17

   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp
   26    | LEFT_PAR exp • RIGHT_PAR

    RIGHT_PAR  shift, and go to state 39
    PLUS       shift, and go to state 20
    MINUS      shift, and go to state 21
    MUL        shift, and go to state 22
    DIV        shift, and go to state 23
    REM        shift, and go to state 24
    BOR        shift, and go to state 25
    BAND       shift, and go to state 26
    AND        shift, and go to state 27
    OR         shift, and go to state 28
    XOR        shift, and go to state 29
    LT         shift, and go to state 30
    LE         shift, and go to state 31
    GT         shift, and go to state 32
    GE         shift, and go to state 33
    NE         shift, and go to state 34
    EQ         shift, and go to state 35


State 18

    9 exp: NOT exp •
   10    | exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    $default  reduce using rule 9 (exp)


State 19

    4 stmt: RETURN exp SEMICOLON •

    $default  reduce using rule 4 (stmt)


State 20

   13 exp: exp PLUS • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 40


State 21

   14 exp: exp MINUS • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 41


State 22

   10 exp: exp MUL • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 42


State 23

   11 exp: exp DIV • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 43


State 24

   12 exp: exp REM • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 44


State 25

   23 exp: exp BOR • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 45


State 26

   21 exp: exp BAND • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 46


State 27

   24 exp: exp AND • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 47


State 28

   25 exp: exp OR • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 48


State 29

   22 exp: exp XOR • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 49


State 30

   15 exp: exp LT • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 50


State 31

   16 exp: exp LE • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 51


State 32

   17 exp: exp GT • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 52


State 33

   18 exp: exp GE • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 53


State 34

   20 exp: exp NE • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 54


State 35

   19 exp: exp EQ • exp

    INT_CONSTANT  shift, and go to state 8
    LEFT_PAR      shift, and go to state 9
    NOT           shift, and go to state 10

    exp  go to state 55


State 36

    6 stmt: WHILE LEFT_PAR exp • RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC
   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    RIGHT_PAR  shift, and go to state 56
    PLUS       shift, and go to state 20
    MINUS      shift, and go to state 21
    MUL        shift, and go to state 22
    DIV        shift, and go to state 23
    REM        shift, and go to state 24
    BOR        shift, and go to state 25
    BAND       shift, and go to state 26
    AND        shift, and go to state 27
    OR         shift, and go to state 28
    XOR        shift, and go to state 29
    LT         shift, and go to state 30
    LE         shift, and go to state 31
    GT         shift, and go to state 32
    GE         shift, and go to state 33
    NE         shift, and go to state 34
    EQ         shift, and go to state 35


State 37

    7 stmt: REPEAT LEFT_PAR exp • RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC
   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    RIGHT_PAR  shift, and go to state 57
    PLUS       shift, and go to state 20
    MINUS      shift, and go to state 21
    MUL        shift, and go to state 22
    DIV        shift, and go to state 23
    REM        shift, and go to state 24
    BOR        shift, and go to state 25
    BAND       shift, and go to state 26
    AND        shift, and go to state 27
    OR         shift, and go to state 28
    XOR        shift, and go to state 29
    LT         shift, and go to state 30
    LE         shift, and go to state 31
    GT         shift, and go to state 32
    GE         shift, and go to state 33
    NE         shift, and go to state 34
    EQ         shift, and go to state 35


State 38

    5 stmt: IF LEFT_PAR exp • RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC
   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    RIGHT_PAR  shift, and go to state 58
    PLUS       shift, and go to state 20
    MINUS      shift, and go to state 21
    MUL        shift, and go to state 22
    DIV        shift, and go to state 23
    REM        shift, and go to state 24
    BOR        shift, and go to state 25
    BAND       shift, and go to state 26
    AND        shift, and go to state 27
    OR         shift, and go to state 28
    XOR        shift, and go to state 29
    LT         shift, and go to state 30
    LE         shift, and go to state 31
    GT         shift, and go to state 32
    GE         shift, and go to state 33
    NE         shift, and go to state 34
    EQ         shift, and go to state 35


State 39

   26 exp: LEFT_PAR exp RIGHT_PAR •

    $default  reduce using rule 26 (exp)


State 40

   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   13    | exp PLUS exp •
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    MUL  shift, and go to state 22
    DIV  shift, and go to state 23
    REM  shift, and go to state 24

    $default  reduce using rule 13 (exp)


State 41

   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   14    | exp MINUS exp •
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    MUL  shift, and go to state 22
    DIV  shift, and go to state 23
    REM  shift, and go to state 24

    $default  reduce using rule 14 (exp)


State 42

   10 exp: exp • MUL exp
   10    | exp MUL exp •
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    $default  reduce using rule 10 (exp)


State 43

   10 exp: exp • MUL exp
   11    | exp • DIV exp
   11    | exp DIV exp •
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    $default  reduce using rule 11 (exp)


State 44

   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   12    | exp REM exp •
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    $default  reduce using rule 12 (exp)


State 45

   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   23    | exp BOR exp •
   24    | exp • AND exp
   25    | exp • OR exp

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    REM    shift, and go to state 24
    BAND   shift, and go to state 26
    XOR    shift, and go to state 29
    LT     shift, and go to state 30
    LE     shift, and go to state 31
    GT     shift, and go to state 32
    GE     shift, and go to state 33
    NE     shift, and go to state 34
    EQ     shift, and go to state 35

    $default  reduce using rule 23 (exp)


State 46

   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   21    | exp BAND exp •
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    REM    shift, and go to state 24
    LT     shift, and go to state 30
    LE     shift, and go to state 31
    GT     shift, and go to state 32
    GE     shift, and go to state 33
    NE     shift, and go to state 34
    EQ     shift, and go to state 35

    $default  reduce using rule 21 (exp)


State 47

   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   24    | exp AND exp •
   25    | exp • OR exp

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    REM    shift, and go to state 24
    BOR    shift, and go to state 25
    BAND   shift, and go to state 26
    XOR    shift, and go to state 29
    LT     shift, and go to state 30
    LE     shift, and go to state 31
    GT     shift, and go to state 32
    GE     shift, and go to state 33
    NE     shift, and go to state 34
    EQ     shift, and go to state 35

    $default  reduce using rule 24 (exp)


State 48

   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp
   25    | exp OR exp •

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    REM    shift, and go to state 24
    BOR    shift, and go to state 25
    BAND   shift, and go to state 26
    AND    shift, and go to state 27
    XOR    shift, and go to state 29
    LT     shift, and go to state 30
    LE     shift, and go to state 31
    GT     shift, and go to state 32
    GE     shift, and go to state 33
    NE     shift, and go to state 34
    EQ     shift, and go to state 35

    $default  reduce using rule 25 (exp)


State 49

   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   22    | exp XOR exp •
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    REM    shift, and go to state 24
    BAND   shift, and go to state 26
    LT     shift, and go to state 30
    LE     shift, and go to state 31
    GT     shift, and go to state 32
    GE     shift, and go to state 33
    NE     shift, and go to state 34
    EQ     shift, and go to state 35

    $default  reduce using rule 22 (exp)


State 50

   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   15    | exp LT exp •
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    REM    shift, and go to state 24

    $default  reduce using rule 15 (exp)


State 51

   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   16    | exp LE exp •
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    REM    shift, and go to state 24

    $default  reduce using rule 16 (exp)


State 52

   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   17    | exp GT exp •
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    REM    shift, and go to state 24

    $default  reduce using rule 17 (exp)


State 53

   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   18    | exp GE exp •
   19    | exp • EQ exp
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    REM    shift, and go to state 24

    $default  reduce using rule 18 (exp)


State 54

   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   20    | exp • NE exp
   20    | exp NE exp •
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    REM    shift, and go to state 24
    LT     shift, and go to state 30
    LE     shift, and go to state 31
    GT     shift, and go to state 32
    GE     shift, and go to state 33

    $default  reduce using rule 20 (exp)


State 55

   10 exp: exp • MUL exp
   11    | exp • DIV exp
   12    | exp • REM exp
   13    | exp • PLUS exp
   14    | exp • MINUS exp
   15    | exp • LT exp
   16    | exp • LE exp
   17    | exp • GT exp
   18    | exp • GE exp
   19    | exp • EQ exp
   19    | exp EQ exp •
   20    | exp • NE exp
   21    | exp • BAND exp
   22    | exp • XOR exp
   23    | exp • BOR exp
   24    | exp • AND exp
   25    | exp • OR exp

    PLUS   shift, and go to state 20
    MINUS  shift, and go to state 21
    MUL    shift, and go to state 22
    DIV    shift, and go to state 23
    REM    shift, and go to state 24
    LT     shift, and go to state 30
    LE     shift, and go to state 31
    GT     shift, and go to state 32
    GE     shift, and go to state 33

    $default  reduce using rule 19 (exp)


State 56

    6 stmt: WHILE LEFT_PAR exp RIGHT_PAR • LEFT_BRAC stmts RIGHT_BRAC

    LEFT_BRAC  shift, and go to state 59


State 57

    7 stmt: REPEAT LEFT_PAR exp RIGHT_PAR • LEFT_BRAC stmts RIGHT_BRAC

    LEFT_BRAC  shift, and go to state 60


State 58

    5 stmt: IF LEFT_PAR exp RIGHT_PAR • LEFT_BRAC stmts RIGHT_BRAC

    LEFT_BRAC  shift, and go to state 61


State 59

    6 stmt: WHILE LEFT_PAR exp RIGHT_PAR LEFT_BRAC • stmts RIGHT_BRAC

    RETURN  shift, and go to state 1
    WHILE   shift, and go to state 2
    REPEAT  shift, and go to state 3
    IF      shift, and go to state 4

    stmts  go to state 62
    stmt   go to state 7


State 60

    7 stmt: REPEAT LEFT_PAR exp RIGHT_PAR LEFT_BRAC • stmts RIGHT_BRAC

    RETURN  shift, and go to state 1
    WHILE   shift, and go to state 2
    REPEAT  shift, and go to state 3
    IF      shift, and go to state 4

    stmts  go to state 63
    stmt   go to state 7


State 61

    5 stmt: IF LEFT_PAR exp RIGHT_PAR LEFT_BRAC • stmts RIGHT_BRAC

    RETURN  shift, and go to state 1
    WHILE   shift, and go to state 2
    REPEAT  shift, and go to state 3
    IF      shift, and go to state 4

    stmts  go to state 64
    stmt   go to state 7


State 62

    2 stmts: stmts • stmt
    6 stmt: WHILE LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts • RIGHT_BRAC

    RETURN      shift, and go to state 1
    WHILE       shift, and go to state 2
    REPEAT      shift, and go to state 3
    IF          shift, and go to state 4
    RIGHT_BRAC  shift, and go to state 65

    stmt  go to state 16


State 63

    2 stmts: stmts • stmt
    7 stmt: REPEAT LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts • RIGHT_BRAC

    RETURN      shift, and go to state 1
    WHILE       shift, and go to state 2
    REPEAT      shift, and go to state 3
    IF          shift, and go to state 4
    RIGHT_BRAC  shift, and go to state 66

    stmt  go to state 16


State 64

    2 stmts: stmts • stmt
    5 stmt: IF LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts • RIGHT_BRAC

    RETURN      shift, and go to state 1
    WHILE       shift, and go to state 2
    REPEAT      shift, and go to state 3
    IF          shift, and go to state 4
    RIGHT_BRAC  shift, and go to state 67

    stmt  go to state 16


State 65

    6 stmt: WHILE LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC •

    $default  reduce using rule 6 (stmt)


State 66

    7 stmt: REPEAT LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC •

    $default  reduce using rule 7 (stmt)


State 67

    5 stmt: IF LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC •

    $default  reduce using rule 5 (stmt)
