Terminals unused in grammar

    FUN
    LEFT_SQR_BRAC
    RIGHT_SQR_BRAC


Grammar

    0 $accept: program $end

    1 program: vars stmts
    2        | vars
    3        | stmts

    4 stmts: stmts stmt
    5      | stmt

    6 vars: vars var
    7     | var

    8 stmt: RETURN exp SEMICOLON
    9     | IF LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC
   10     | WHILE LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC
   11     | REPEAT LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC
   12     | NAME ASSIGN exp SEMICOLON

   13 var: VAR NAME TYPE ASSIGN exp SEMICOLON

   14 exp: INT_CONSTANT
   15    | NOT exp
   16    | exp MUL exp
   17    | exp DIV exp
   18    | exp REM exp
   19    | exp PLUS exp
   20    | exp MINUS exp
   21    | exp LT exp
   22    | exp LE exp
   23    | exp GT exp
   24    | exp GE exp
   25    | exp EQ exp
   26    | exp NE exp
   27    | exp BAND exp
   28    | exp XOR exp
   29    | exp BOR exp
   30    | exp AND exp
   31    | exp OR exp
   32    | LEFT_PAR exp RIGHT_PAR
   33    | NAME
   34    | STRING


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT_CONSTANT <ival> (258) 14
    NAME <varName> (259) 12 13 33
    TYPE <varType> (260) 13
    STRING <string> (261) 34
    RETURN (262) 8
    SEMICOLON (263) 8 12 13
    VAR (264) 13
    FUN (265)
    WHILE (266) 10
    REPEAT (267) 11
    IF (268) 9
    LEFT_PAR (269) 9 10 11 32
    RIGHT_PAR (270) 9 10 11 32
    LEFT_BRAC (271) 9 10 11
    RIGHT_BRAC (272) 9 10 11
    LEFT_SQR_BRAC (273)
    RIGHT_SQR_BRAC (274)
    PLUS (275) 19
    MINUS (276) 20
    MUL (277) 16
    DIV (278) 17
    REM (279) 18
    BOR (280) 29
    BAND (281) 27
    AND (282) 30
    OR (283) 31
    XOR (284) 28
    LT (285) 21
    LE (286) 22
    GT (287) 23
    GE (288) 24
    NE (289) 26
    EQ (290) 25
    NOT (291) 15
    ASSIGN (292) 12 13


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    program (39)
        on left: 1 2 3
        on right: 0
    stmts <stmts> (40)
        on left: 4 5
        on right: 1 3 4 9 10 11
    vars <vars> (41)
        on left: 6 7
        on right: 1 2 6
    stmt <stmt> (42)
        on left: 8 9 10 11 12
        on right: 4 5
    var <vars> (43)
        on left: 13
        on right: 6 7
    exp <exp> (44)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
        on right: 8 9 10 11 12 13 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32


State 0

    0 $accept: • program $end

    NAME    shift, and go to state 1
    RETURN  shift, and go to state 2
    VAR     shift, and go to state 3
    WHILE   shift, and go to state 4
    REPEAT  shift, and go to state 5
    IF      shift, and go to state 6

    program  go to state 7
    stmts    go to state 8
    vars     go to state 9
    stmt     go to state 10
    var      go to state 11


State 1

   12 stmt: NAME • ASSIGN exp SEMICOLON

    ASSIGN  shift, and go to state 12


State 2

    8 stmt: RETURN • exp SEMICOLON

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 18


State 3

   13 var: VAR • NAME TYPE ASSIGN exp SEMICOLON

    NAME  shift, and go to state 19


State 4

   10 stmt: WHILE • LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC

    LEFT_PAR  shift, and go to state 20


State 5

   11 stmt: REPEAT • LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC

    LEFT_PAR  shift, and go to state 21


State 6

    9 stmt: IF • LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC

    LEFT_PAR  shift, and go to state 22


State 7

    0 $accept: program • $end

    $end  shift, and go to state 23


State 8

    3 program: stmts •
    4 stmts: stmts • stmt

    NAME    shift, and go to state 1
    RETURN  shift, and go to state 2
    WHILE   shift, and go to state 4
    REPEAT  shift, and go to state 5
    IF      shift, and go to state 6

    $default  reduce using rule 3 (program)

    stmt  go to state 24


State 9

    1 program: vars • stmts
    2        | vars •
    6 vars: vars • var

    NAME    shift, and go to state 1
    RETURN  shift, and go to state 2
    VAR     shift, and go to state 3
    WHILE   shift, and go to state 4
    REPEAT  shift, and go to state 5
    IF      shift, and go to state 6

    $default  reduce using rule 2 (program)

    stmts  go to state 25
    stmt   go to state 10
    var    go to state 26


State 10

    5 stmts: stmt •

    $default  reduce using rule 5 (stmts)


State 11

    7 vars: var •

    $default  reduce using rule 7 (vars)


State 12

   12 stmt: NAME ASSIGN • exp SEMICOLON

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 27


State 13

   14 exp: INT_CONSTANT •

    $default  reduce using rule 14 (exp)


State 14

   33 exp: NAME •

    $default  reduce using rule 33 (exp)


State 15

   34 exp: STRING •

    $default  reduce using rule 34 (exp)


State 16

   32 exp: LEFT_PAR • exp RIGHT_PAR

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 28


State 17

   15 exp: NOT • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 29


State 18

    8 stmt: RETURN exp • SEMICOLON
   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    SEMICOLON  shift, and go to state 30
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    MUL        shift, and go to state 33
    DIV        shift, and go to state 34
    REM        shift, and go to state 35
    BOR        shift, and go to state 36
    BAND       shift, and go to state 37
    AND        shift, and go to state 38
    OR         shift, and go to state 39
    XOR        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    NE         shift, and go to state 45
    EQ         shift, and go to state 46


State 19

   13 var: VAR NAME • TYPE ASSIGN exp SEMICOLON

    TYPE  shift, and go to state 47


State 20

   10 stmt: WHILE LEFT_PAR • exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 48


State 21

   11 stmt: REPEAT LEFT_PAR • exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 49


State 22

    9 stmt: IF LEFT_PAR • exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 50


State 23

    0 $accept: program $end •

    $default  accept


State 24

    4 stmts: stmts stmt •

    $default  reduce using rule 4 (stmts)


State 25

    1 program: vars stmts •
    4 stmts: stmts • stmt

    NAME    shift, and go to state 1
    RETURN  shift, and go to state 2
    WHILE   shift, and go to state 4
    REPEAT  shift, and go to state 5
    IF      shift, and go to state 6

    $default  reduce using rule 1 (program)

    stmt  go to state 24


State 26

    6 vars: vars var •

    $default  reduce using rule 6 (vars)


State 27

   12 stmt: NAME ASSIGN exp • SEMICOLON
   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    SEMICOLON  shift, and go to state 51
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    MUL        shift, and go to state 33
    DIV        shift, and go to state 34
    REM        shift, and go to state 35
    BOR        shift, and go to state 36
    BAND       shift, and go to state 37
    AND        shift, and go to state 38
    OR         shift, and go to state 39
    XOR        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    NE         shift, and go to state 45
    EQ         shift, and go to state 46


State 28

   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp
   32    | LEFT_PAR exp • RIGHT_PAR

    RIGHT_PAR  shift, and go to state 52
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    MUL        shift, and go to state 33
    DIV        shift, and go to state 34
    REM        shift, and go to state 35
    BOR        shift, and go to state 36
    BAND       shift, and go to state 37
    AND        shift, and go to state 38
    OR         shift, and go to state 39
    XOR        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    NE         shift, and go to state 45
    EQ         shift, and go to state 46


State 29

   15 exp: NOT exp •
   16    | exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    $default  reduce using rule 15 (exp)


State 30

    8 stmt: RETURN exp SEMICOLON •

    $default  reduce using rule 8 (stmt)


State 31

   19 exp: exp PLUS • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 53


State 32

   20 exp: exp MINUS • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 54


State 33

   16 exp: exp MUL • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 55


State 34

   17 exp: exp DIV • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 56


State 35

   18 exp: exp REM • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 57


State 36

   29 exp: exp BOR • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 58


State 37

   27 exp: exp BAND • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 59


State 38

   30 exp: exp AND • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 60


State 39

   31 exp: exp OR • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 61


State 40

   28 exp: exp XOR • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 62


State 41

   21 exp: exp LT • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 63


State 42

   22 exp: exp LE • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 64


State 43

   23 exp: exp GT • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 65


State 44

   24 exp: exp GE • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 66


State 45

   26 exp: exp NE • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 67


State 46

   25 exp: exp EQ • exp

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 68


State 47

   13 var: VAR NAME TYPE • ASSIGN exp SEMICOLON

    ASSIGN  shift, and go to state 69


State 48

   10 stmt: WHILE LEFT_PAR exp • RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC
   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    RIGHT_PAR  shift, and go to state 70
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    MUL        shift, and go to state 33
    DIV        shift, and go to state 34
    REM        shift, and go to state 35
    BOR        shift, and go to state 36
    BAND       shift, and go to state 37
    AND        shift, and go to state 38
    OR         shift, and go to state 39
    XOR        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    NE         shift, and go to state 45
    EQ         shift, and go to state 46


State 49

   11 stmt: REPEAT LEFT_PAR exp • RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC
   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    RIGHT_PAR  shift, and go to state 71
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    MUL        shift, and go to state 33
    DIV        shift, and go to state 34
    REM        shift, and go to state 35
    BOR        shift, and go to state 36
    BAND       shift, and go to state 37
    AND        shift, and go to state 38
    OR         shift, and go to state 39
    XOR        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    NE         shift, and go to state 45
    EQ         shift, and go to state 46


State 50

    9 stmt: IF LEFT_PAR exp • RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC
   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    RIGHT_PAR  shift, and go to state 72
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    MUL        shift, and go to state 33
    DIV        shift, and go to state 34
    REM        shift, and go to state 35
    BOR        shift, and go to state 36
    BAND       shift, and go to state 37
    AND        shift, and go to state 38
    OR         shift, and go to state 39
    XOR        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    NE         shift, and go to state 45
    EQ         shift, and go to state 46


State 51

   12 stmt: NAME ASSIGN exp SEMICOLON •

    $default  reduce using rule 12 (stmt)


State 52

   32 exp: LEFT_PAR exp RIGHT_PAR •

    $default  reduce using rule 32 (exp)


State 53

   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   19    | exp PLUS exp •
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    MUL  shift, and go to state 33
    DIV  shift, and go to state 34
    REM  shift, and go to state 35

    $default  reduce using rule 19 (exp)


State 54

   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   20    | exp MINUS exp •
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    MUL  shift, and go to state 33
    DIV  shift, and go to state 34
    REM  shift, and go to state 35

    $default  reduce using rule 20 (exp)


State 55

   16 exp: exp • MUL exp
   16    | exp MUL exp •
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    $default  reduce using rule 16 (exp)


State 56

   16 exp: exp • MUL exp
   17    | exp • DIV exp
   17    | exp DIV exp •
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    $default  reduce using rule 17 (exp)


State 57

   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   18    | exp REM exp •
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    $default  reduce using rule 18 (exp)


State 58

   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   29    | exp BOR exp •
   30    | exp • AND exp
   31    | exp • OR exp

    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    REM    shift, and go to state 35
    BAND   shift, and go to state 37
    XOR    shift, and go to state 40
    LT     shift, and go to state 41
    LE     shift, and go to state 42
    GT     shift, and go to state 43
    GE     shift, and go to state 44
    NE     shift, and go to state 45
    EQ     shift, and go to state 46

    $default  reduce using rule 29 (exp)


State 59

   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   27    | exp BAND exp •
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    REM    shift, and go to state 35
    LT     shift, and go to state 41
    LE     shift, and go to state 42
    GT     shift, and go to state 43
    GE     shift, and go to state 44
    NE     shift, and go to state 45
    EQ     shift, and go to state 46

    $default  reduce using rule 27 (exp)


State 60

   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   30    | exp AND exp •
   31    | exp • OR exp

    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    REM    shift, and go to state 35
    BOR    shift, and go to state 36
    BAND   shift, and go to state 37
    XOR    shift, and go to state 40
    LT     shift, and go to state 41
    LE     shift, and go to state 42
    GT     shift, and go to state 43
    GE     shift, and go to state 44
    NE     shift, and go to state 45
    EQ     shift, and go to state 46

    $default  reduce using rule 30 (exp)


State 61

   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp
   31    | exp OR exp •

    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    REM    shift, and go to state 35
    BOR    shift, and go to state 36
    BAND   shift, and go to state 37
    AND    shift, and go to state 38
    XOR    shift, and go to state 40
    LT     shift, and go to state 41
    LE     shift, and go to state 42
    GT     shift, and go to state 43
    GE     shift, and go to state 44
    NE     shift, and go to state 45
    EQ     shift, and go to state 46

    $default  reduce using rule 31 (exp)


State 62

   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   28    | exp XOR exp •
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    REM    shift, and go to state 35
    BAND   shift, and go to state 37
    LT     shift, and go to state 41
    LE     shift, and go to state 42
    GT     shift, and go to state 43
    GE     shift, and go to state 44
    NE     shift, and go to state 45
    EQ     shift, and go to state 46

    $default  reduce using rule 28 (exp)


State 63

   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   21    | exp LT exp •
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    REM    shift, and go to state 35

    $default  reduce using rule 21 (exp)


State 64

   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   22    | exp LE exp •
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    REM    shift, and go to state 35

    $default  reduce using rule 22 (exp)


State 65

   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   23    | exp GT exp •
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    REM    shift, and go to state 35

    $default  reduce using rule 23 (exp)


State 66

   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   24    | exp GE exp •
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    REM    shift, and go to state 35

    $default  reduce using rule 24 (exp)


State 67

   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   26    | exp NE exp •
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    REM    shift, and go to state 35
    LT     shift, and go to state 41
    LE     shift, and go to state 42
    GT     shift, and go to state 43
    GE     shift, and go to state 44

    $default  reduce using rule 26 (exp)


State 68

   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   25    | exp EQ exp •
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    PLUS   shift, and go to state 31
    MINUS  shift, and go to state 32
    MUL    shift, and go to state 33
    DIV    shift, and go to state 34
    REM    shift, and go to state 35
    LT     shift, and go to state 41
    LE     shift, and go to state 42
    GT     shift, and go to state 43
    GE     shift, and go to state 44

    $default  reduce using rule 25 (exp)


State 69

   13 var: VAR NAME TYPE ASSIGN • exp SEMICOLON

    INT_CONSTANT  shift, and go to state 13
    NAME          shift, and go to state 14
    STRING        shift, and go to state 15
    LEFT_PAR      shift, and go to state 16
    NOT           shift, and go to state 17

    exp  go to state 73


State 70

   10 stmt: WHILE LEFT_PAR exp RIGHT_PAR • LEFT_BRAC stmts RIGHT_BRAC

    LEFT_BRAC  shift, and go to state 74


State 71

   11 stmt: REPEAT LEFT_PAR exp RIGHT_PAR • LEFT_BRAC stmts RIGHT_BRAC

    LEFT_BRAC  shift, and go to state 75


State 72

    9 stmt: IF LEFT_PAR exp RIGHT_PAR • LEFT_BRAC stmts RIGHT_BRAC

    LEFT_BRAC  shift, and go to state 76


State 73

   13 var: VAR NAME TYPE ASSIGN exp • SEMICOLON
   16 exp: exp • MUL exp
   17    | exp • DIV exp
   18    | exp • REM exp
   19    | exp • PLUS exp
   20    | exp • MINUS exp
   21    | exp • LT exp
   22    | exp • LE exp
   23    | exp • GT exp
   24    | exp • GE exp
   25    | exp • EQ exp
   26    | exp • NE exp
   27    | exp • BAND exp
   28    | exp • XOR exp
   29    | exp • BOR exp
   30    | exp • AND exp
   31    | exp • OR exp

    SEMICOLON  shift, and go to state 77
    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    MUL        shift, and go to state 33
    DIV        shift, and go to state 34
    REM        shift, and go to state 35
    BOR        shift, and go to state 36
    BAND       shift, and go to state 37
    AND        shift, and go to state 38
    OR         shift, and go to state 39
    XOR        shift, and go to state 40
    LT         shift, and go to state 41
    LE         shift, and go to state 42
    GT         shift, and go to state 43
    GE         shift, and go to state 44
    NE         shift, and go to state 45
    EQ         shift, and go to state 46


State 74

   10 stmt: WHILE LEFT_PAR exp RIGHT_PAR LEFT_BRAC • stmts RIGHT_BRAC

    NAME    shift, and go to state 1
    RETURN  shift, and go to state 2
    WHILE   shift, and go to state 4
    REPEAT  shift, and go to state 5
    IF      shift, and go to state 6

    stmts  go to state 78
    stmt   go to state 10


State 75

   11 stmt: REPEAT LEFT_PAR exp RIGHT_PAR LEFT_BRAC • stmts RIGHT_BRAC

    NAME    shift, and go to state 1
    RETURN  shift, and go to state 2
    WHILE   shift, and go to state 4
    REPEAT  shift, and go to state 5
    IF      shift, and go to state 6

    stmts  go to state 79
    stmt   go to state 10


State 76

    9 stmt: IF LEFT_PAR exp RIGHT_PAR LEFT_BRAC • stmts RIGHT_BRAC

    NAME    shift, and go to state 1
    RETURN  shift, and go to state 2
    WHILE   shift, and go to state 4
    REPEAT  shift, and go to state 5
    IF      shift, and go to state 6

    stmts  go to state 80
    stmt   go to state 10


State 77

   13 var: VAR NAME TYPE ASSIGN exp SEMICOLON •

    $default  reduce using rule 13 (var)


State 78

    4 stmts: stmts • stmt
   10 stmt: WHILE LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts • RIGHT_BRAC

    NAME        shift, and go to state 1
    RETURN      shift, and go to state 2
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    RIGHT_BRAC  shift, and go to state 81

    stmt  go to state 24


State 79

    4 stmts: stmts • stmt
   11 stmt: REPEAT LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts • RIGHT_BRAC

    NAME        shift, and go to state 1
    RETURN      shift, and go to state 2
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    RIGHT_BRAC  shift, and go to state 82

    stmt  go to state 24


State 80

    4 stmts: stmts • stmt
    9 stmt: IF LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts • RIGHT_BRAC

    NAME        shift, and go to state 1
    RETURN      shift, and go to state 2
    WHILE       shift, and go to state 4
    REPEAT      shift, and go to state 5
    IF          shift, and go to state 6
    RIGHT_BRAC  shift, and go to state 83

    stmt  go to state 24


State 81

   10 stmt: WHILE LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC •

    $default  reduce using rule 10 (stmt)


State 82

   11 stmt: REPEAT LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC •

    $default  reduce using rule 11 (stmt)


State 83

    9 stmt: IF LEFT_PAR exp RIGHT_PAR LEFT_BRAC stmts RIGHT_BRAC •

    $default  reduce using rule 9 (stmt)
